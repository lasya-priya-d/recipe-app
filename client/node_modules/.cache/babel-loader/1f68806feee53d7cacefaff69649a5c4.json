{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Recipe-App-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Recipe-App-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Recipe-App-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Recipe-App-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Recipe-App-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Recipe-App-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Recipe-App-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Recipe-App-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Recipe-App-master\\\\client\\\\src\\\\components\\\\RecipeForm\\\\RecipeForm.js\";\nimport React, { Component } from 'react';\nimport './RecipeForm.scss';\n\nvar RecipeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipeForm, _Component);\n\n  function RecipeForm(props) {\n    var _this;\n\n    _classCallCheck(this, RecipeForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecipeForm).call(this, props));\n    _this.state = {\n      showMe: false,\n      src: '',\n      title: '',\n      postData: false\n    };\n    _this.showMessage = _this.showMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showMessageAndSendData = _this.showMessageAndSendData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sendData = _this.sendData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getData = _this.getData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // This method display a success message when the submit button has been clicked \n\n\n  _createClass(RecipeForm, [{\n    key: \"showMessage\",\n    value: function showMessage() {\n      var _this2 = this;\n\n      this.setState({\n        showMe: true\n      });\n      setTimeout(function () {\n        _this2.setState({\n          showMe: false\n        });\n      }, 1500);\n    } // This method runs both the showMessage and sendData method when the submit button is clicked\n\n  }, {\n    key: \"showMessageAndSendData\",\n    value: function showMessageAndSendData() {\n      var _this3 = this;\n\n      this.showMessage();\n      setTimeout(function () {\n        _this3.sendData();\n      }, 1000);\n    }\n    /*\n        This method takes the image before the form data is sent to the database, \n        it turns the image to a base64 text and saves it in the state.\n        I need to do a post request and save the image within the collection.\n        Do a fetch request and save the data inside the state, then display it.\n    */\n\n  }, {\n    key: \"getData\",\n    value: function getData(files) {\n      var _this4 = this;\n\n      var file = document.getElementById('form-image').files[0];\n\n      if (file) {\n        var reader = new FileReader();\n\n        reader.onload = function (theFile) {\n          return function (e) {\n            _this4.setState({\n              src: e.target.result\n            });\n          };\n        }(file);\n\n        reader.readAsDataURL(file);\n        console.log(this.state.src);\n        this.setState({\n          postData: true\n        });\n      } else {\n        var postData = this.state.postData;\n        if (postData) return;else {\n          alert(\"No file selected. Please upload an image or a placeholder will be used instead.\");\n          var question = prompt('Would you like to upload an image? if so then enter YES else enter NO.');\n\n          if (question.toLowerCase() === 'yes') {\n            return;\n          } else {\n            this.setState({\n              src: \"https://via.placeholder.com/150x150\"\n            });\n            this.setState({\n              postData: true\n            });\n          }\n        }\n      }\n    } // This method does a Post request with the data entered\n\n  }, {\n    key: \"sendData\",\n    value: function () {\n      var _sendData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var postData, obj;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                postData = this.state.postData;\n\n                if (postData) {\n                  // This object contains all the data entered including the image as base64\n                  obj = {\n                    title: document.getElementById('form-title').value,\n                    image: this.state.src,\n                    duration: document.getElementById('form-duration').value,\n                    steps: document.getElementById('form-steps').value,\n                    rating: document.getElementById('form-rating').value\n                  };\n                  this.props.getNewRecipe(obj); // Reset input fields and the image src within the state\n\n                  document.getElementById('form-title').value = '';\n                  this.setState({\n                    src: ''\n                  });\n                  document.getElementById('form-duration').value = '';\n                  document.getElementById('form-steps').value = '';\n                  document.getElementById('form-rating').value = '';\n                  document.getElementById('form-image').value = ''; // Send the data\n                  // Live server\n\n                  fetch('https://localhost:5000/upload', {\n                    method: 'post',\n                    redirect: 'follow',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json'\n                    },\n                    // Turn the object to json\n                    body: JSON.stringify({\n                      title: obj.title,\n                      image: obj.image,\n                      duration: obj.duration,\n                      steps: obj.steps,\n                      rating: obj.rating\n                    })\n                  }).then(function (res) {\n                    // A message to let me know that the data has been sent\n                    console.log('Data sent!');\n                  }).catch(function (e) {\n                    return console.log(e);\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function sendData() {\n        return _sendData.apply(this, arguments);\n      }\n\n      return sendData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var showMe = this.state.showMe;\n      return React.createElement(\"div\", {\n        id: \"recipes-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"recipes-form-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"form-title\",\n        type: \"text\",\n        placeholder: \"Enter the title\",\n        name: \"title\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"form-image\",\n        type: \"file\",\n        placeholder: \"Upload an image\",\n        name: \"image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"form-duration\",\n        type: \"text\",\n        placeholder: \"Enter the duration\",\n        name: \"duration\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        id: \"form-steps\",\n        placeholder: \"Enter steps...\",\n        name: \"steps\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"form-rating\",\n        type: \"text\",\n        placeholder: \"Enter the difficulty between 0-5\",\n        name: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"form-button\",\n        type: \"button\",\n        value: \"Submit\",\n        onClick: this.showMessageAndSendData,\n        onMouseEnter: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), showMe ? React.createElement(\"div\", {\n        id: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Recipe successfully added!\")) : null));\n    }\n  }]);\n\n  return RecipeForm;\n}(Component);\n\nexport { RecipeForm as default };\n;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/Recipe-App-master/client/src/components/RecipeForm/RecipeForm.js"],"names":["React","Component","RecipeForm","props","state","showMe","src","title","postData","showMessage","bind","showMessageAndSendData","sendData","getData","setState","setTimeout","files","file","document","getElementById","reader","FileReader","onload","theFile","e","target","result","readAsDataURL","console","log","alert","question","prompt","toLowerCase","obj","value","image","duration","steps","rating","getNewRecipe","fetch","method","redirect","headers","body","JSON","stringify","then","res","catch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './RecipeForm.scss';\n\nexport default class RecipeForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showMe: false,\n            src: '',\n            title: '',\n            postData: false\n        }\n        this.showMessage = this.showMessage.bind(this);\n        this.showMessageAndSendData = this.showMessageAndSendData.bind(this);\n        this.sendData = this.sendData.bind(this);\n        this.getData = this.getData.bind(this);\n    }\n\n    // This method display a success message when the submit button has been clicked \n    showMessage() {\n        this.setState({\n            showMe: true\n        });\n        setTimeout(() => {\n            this.setState({\n                showMe: false\n            });\n        }, 1500);\n        \n    }\n\n    // This method runs both the showMessage and sendData method when the submit button is clicked\n    showMessageAndSendData(){\n        this.showMessage();\n        setTimeout(() => {this.sendData();}, 1000);\n    }\n\n    /*\n        This method takes the image before the form data is sent to the database, \n        it turns the image to a base64 text and saves it in the state.\n        I need to do a post request and save the image within the collection.\n        Do a fetch request and save the data inside the state, then display it.\n    */\n   getData(files) {\n        let file = document.getElementById('form-image').files[0];\n        if(file) {\n            let reader = new FileReader();\n            reader.onload = ((theFile) => {\n            return (e) => { \n                this.setState({src : e.target.result});                \n            }; \n            })(file);\n            reader.readAsDataURL(file);\n            console.log(this.state.src);\n            this.setState({ postData: true });\n        }\n        else {\n            let { postData } = this.state;\n            if (postData) return;\n            else {\n                alert(\"No file selected. Please upload an image or a placeholder will be used instead.\");\n                let question = prompt('Would you like to upload an image? if so then enter YES else enter NO.');\n\n                if (question.toLowerCase() === 'yes') {\n                    return;\n                } else {\n                    this.setState({src: \"https://via.placeholder.com/150x150\"});\n                    this.setState({ postData: true });\n                }\n            }\n        }\n    }\n\n    // This method does a Post request with the data entered\n    async sendData() {\n        let { postData } = this.state;\n\n        if (postData) {\n            // This object contains all the data entered including the image as base64\n            let obj = {\n                title: document.getElementById('form-title').value,\n                image: this.state.src,\n                duration: document.getElementById('form-duration').value,\n                steps: document.getElementById('form-steps').value,\n                rating: document.getElementById('form-rating').value\n            };\n\n            this.props.getNewRecipe(obj);\n\n            // Reset input fields and the image src within the state\n            document.getElementById('form-title').value = '';\n            this.setState({ src: '' });\n            document.getElementById('form-duration').value = '';\n            document.getElementById('form-steps').value = '';\n            document.getElementById('form-rating').value = '';\n            document.getElementById('form-image').value = '';\n\n            \n            // Send the data\n            // Live server\n            fetch('https://localhost:5000/upload', {\n                method: 'post',\n                redirect: 'follow',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                // Turn the object to json\n                body: JSON.stringify({\n                    title: obj.title,\n                    image: obj.image,\n                    duration: obj.duration,\n                    steps: obj.steps,\n                    rating: obj.rating\n                })\n            })\n            .then((res) => {\n                // A message to let me know that the data has been sent\n                console.log('Data sent!');       \n            }).catch((e)=> console.log(e));\n        }\n    }\n\n    render() {\n        const { showMe } = this.state;\n        return (\n            <div id = 'recipes-right'>\n                <div id = 'recipes-form-holder'>\n                    <form >\n                        <input id = 'form-title' type = 'text' placeholder = 'Enter the title' name = 'title' autoComplete = 'off' />\n                        <input id = 'form-image' type = 'file' placeholder = 'Upload an image' name = 'image' />\n                        <input id = 'form-duration' type = 'text' placeholder = 'Enter the duration' name = 'duration' autoComplete = 'off'/>\n                        <textarea id = 'form-steps' placeholder = 'Enter steps...' name = 'steps'></textarea>\n                        <input id = 'form-rating' type = 'text' placeholder = 'Enter the difficulty between 0-5' name = 'rating' />\n                        <input id = 'form-button' type = 'button' value = 'Submit' onClick = {this.showMessageAndSendData} onMouseEnter={this.getData} />\n                    </form>\n                    {\n                        showMe ? \n                            <div id = 'message'>\n                                <h3>Recipe successfully added!</h3>\n                            </div> \n                            :null\n                    }\n                </div>\n            </div>\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}